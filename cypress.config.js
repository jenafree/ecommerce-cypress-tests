/// <reference types="cypress" />

// Importa a fun√ß√£o para definir a configura√ß√£o do Cypress
const { defineConfig } = require("cypress");

// Plugin para baixar arquivos durante os testes
const { downloadFile } = require('cypress-downloadfile/lib/addPlugin');

// Plugin para verificar se os downloads foram conclu√≠dos com sucesso
const { verifyDownloadTasks } = require('cy-verify-downloads');

// Exporta a configura√ß√£o do Cypress usando defineConfig para melhor valida√ß√£o
module.exports = defineConfig({
  // Tempo (em ms) que o Cypress aguarda pelos comandos padr√£o antes de falhar
  defaultCommandTimeout: 15000,
  
  // Tempo (em ms) m√°ximo que o Cypress espera o carregamento completo da p√°gina
  pageLoadTimeout: 25000,
  
  // Tempo (em ms) m√°ximo para aguardar respostas de requisi√ß√µes XHR/Ajax
  requestTimeout: 15000,
  
  // Desabilita a gera√ß√£o de v√≠deos dos testes para economizar espa√ßo em disco
  video: false,
  
  // ID do projeto no Dashboard do Cypress (se dispon√≠vel)
  projectId: "",
  
  e2e: {
    // Configura eventos de n√≥ (plugins) antes de cada execu√ß√£o de teste E2E
    setupNodeEvents(on, config) {
      // Registra a tarefa 'downloadFile' para permitir baixar arquivos em testes
      on('task', { downloadFile });
      
      // Registra a tarefa de verifica√ß√£o de downloads conclu√≠dos
      on('task', verifyDownloadTasks);
    },
  },
});

// normaliza EOF (coment·rio sem efeito)

// normaliza EOF (coment·rio sem efeito)
